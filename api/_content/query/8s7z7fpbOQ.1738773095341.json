{"_path":"/release-notes/v0-12","_dir":"release-notes","_draft":false,"_partial":false,"_locale":"","title":"v0.12","description":"","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"v012"},"children":[{"type":"text","value":"v0.12"}]},{"type":"element","tag":"h2","props":{"id":"v0121"},"children":[{"type":"text","value":"v0.12.1"}]},{"type":"element","tag":"h3","props":{"id":"improvements"},"children":[{"type":"text","value":"Improvements"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Fake reporting wasn't working without registering a "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"ReportOptions"}]},{"type":"text","value":", fixed"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Fake reporting now allows to provide a base path"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Data source spec was throwing missing "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"ISession"}]},{"type":"text","value":" error, fixed"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Add query not found option to report context mocking"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Rich transient wasn't added to data source recipe, fixed"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Rich transient group names are now plural, making it similar to rich entity"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Domain assemblies feature now accepts one assembly when it accepts one base\nnamespace, to avoid confusion"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"File provider wasn't working without providing a base namespace in domain\nassemblies, fixed"}]}]},{"type":"element","tag":"h2","props":{"id":"v0120"},"children":[{"type":"text","value":"v0.12.0"}]},{"type":"element","tag":"h3","props":{"id":"features"},"children":[{"type":"text","value":"Features"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Beta features are available in Baked.Recipe.Service package;\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"RuntimeLayer"}]},{"type":"text","value":"is added which merges the following layers:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Configuration"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"DependencyInjection"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Monitoring"}]}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Oracle"}]},{"type":"text","value":" implementation of "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Database"}]},{"type":"text","value":" feature is now added"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Cors"}]},{"type":"text","value":" feature is now added with "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"AspNetCore"}]},{"type":"text","value":" implementation"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Reporting"}]},{"type":"text","value":" feature is introduced with three implenmentations "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"NativeSql"}]},{"type":"text","value":"\nfor production, "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Mock"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Fake"}]},{"type":"text","value":" for development"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"DataSource"}]},{"type":"text","value":" recipe is available which includes minimal features for a web\napplication that only reads data from given database"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"RichTransient"}]},{"type":"text","value":" coding style feature is now added"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"NamespaceAsRoute"}]},{"type":"text","value":" coding style is introduced where namespaces are directly\nreflected to the endpoints routes"}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"improvements-1"},"children":[{"type":"text","value":"Improvements"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"MockConfiguration"}]},{"type":"text","value":" feature now clears "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"FakeSettings"}]},{"type":"text","value":" list on teardown"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"MockMe.TheClient"}]},{"type":"text","value":" helper now provides optional parameter to clear previous\ninvocations"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"ConfigureAction"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"OverrideAction"}]},{"type":"text","value":" helpers are now added to configure\n"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"RestApi.ActionModel"}]},{"type":"text","value":" before and after conventions"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Enum<T>"}]},{"type":"text","value":" helper class is added to use enum values within "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"ValueSource"}]},{"type":"text","value":"\nattribute"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"DataAccess"}]},{"type":"text","value":" layer now exposes "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"FluentConfiguration"}]},{"type":"text","value":" as configuration target"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"DataAccess"}]},{"type":"text","value":" layer now introduces "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"IDatabaseInitializerCollection"}]},{"type":"text","value":"\nconfiguration target for registering database initialization actions"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"IServiceProvider"}]},{"type":"text","value":" now has "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"UseCurrentScope"}]},{"type":"text","value":" extensions to resolve services\nusing the scope provided by "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"IServiceProviderAccessor"}]},{"type":"text","value":" implementations"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"TestRun"}]},{"type":"text","value":" now creates and disposes a scope for each test run to"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Runtime"}]},{"type":"text","value":" layer now provides "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"IFileProvider"}]},{"type":"text","value":"component with\n"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"CompositeFileProvider"}]},{"type":"text","value":" implementation"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"ReadAsString"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"ReadAsStringAsync"}]},{"type":"text","value":" helper extensions are now added for\n"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"IFileProvider"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"DomainAssemblies"}]},{"type":"text","value":" feature now have options to auto add embedded file\nproviders for give assemblies"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Dotnet"}]},{"type":"text","value":" feature now adds embedded and physical file providers for given\nentry assembly"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Async overloads for "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"ShouldPass"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"ShouldFail"}]},{"type":"text","value":" are now available"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Default"}]},{"type":"text","value":" exception handler is renamed as "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"ProblemDetails"}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"ITextTransformer"}]},{"type":"text","value":" is introduced in "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Core"}]},{"type":"text","value":" feature to allow business to make\nuse of "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Humanizer"}]},{"type":"text","value":" methods without depending on it"}]}]},{"type":"element","tag":"h3","props":{"id":"library-upgrades"},"children":[{"type":"text","value":"Library Upgrades"}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Package"}]},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"Old Version"}]},{"type":"element","tag":"th","props":{},"children":[{"type":"text","value":"New Version"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Oracle.ManagedDataAccess.Core"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"new"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"23.6.0"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Microsoft.AspNetCore.Mvc.NewtonsoftJson"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"8.0.8"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"8.0.10"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Microsoft.AspNetCore.Mvc.Testing"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"8.0.8"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"8.0.10"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Microsoft.Data.Sqlite.Core"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"8.0.8"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"8.0.10"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Microsoft.Extensions.Logging.Abstractions"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"8.0.1"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"8.0.2"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Microsoft.Extensions.TimeProvider.Testing"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"8.9.1"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"8.10.0"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"MySql.Data"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"9.0.0"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"9.1.0"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"NHibernate.Extensions.Sqlite"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"8.0.13"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"8.0.14"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Npgsql"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"8.0.4"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"8.0.5"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Swashbuckle.AspNetCore"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"6.8.0"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"6.9.0"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"Swashbuckle.AspNetCore.Annotations"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"6.8.0"}]},{"type":"element","tag":"td","props":{},"children":[{"type":"text","value":"6.9.0"}]}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"v0121","depth":2,"text":"v0.12.1","children":[{"id":"improvements","depth":3,"text":"Improvements"}]},{"id":"v0120","depth":2,"text":"v0.12.0","children":[{"id":"features","depth":3,"text":"Features"},{"id":"improvements-1","depth":3,"text":"Improvements"},{"id":"library-upgrades","depth":3,"text":"Library Upgrades"}]}]}},"_type":"markdown","_id":"content:release-notes:v0-12.md","_source":"content","_file":"release-notes/v0-12.md","_stem":"release-notes/v0-12","_extension":"md"}