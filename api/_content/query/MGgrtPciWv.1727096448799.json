{"_path":"/features/coding-style","_dir":"features","_draft":false,"_partial":false,"_locale":"","title":"Coding Style","description":"Add this feature using AddCodingStyles() extension;","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"coding-style"},"children":[{"type":"text","value":"Coding Style"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Add this feature using "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"AddCodingStyles()"}]},{"type":"text","value":" extension;"}]},{"type":"element","tag":"pre","props":{"className":"language-csharp shiki shiki-themes slack-dark","code":"app.Features.AddCodingStyles([...]);\n","language":"csharp","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#9CDCFE"},"children":[{"type":"text","value":"app"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E6E6E6"},"children":[{"type":"text","value":"."}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#9CDCFE"},"children":[{"type":"text","value":"Features"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E6E6E6"},"children":[{"type":"text","value":"."}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#DCDCAA"},"children":[{"type":"text","value":"AddCodingStyles"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E6E6E6"},"children":[{"type":"text","value":"(["}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#D4D4D4"},"children":[{"type":"text","value":".."}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E6E6E6"},"children":[{"type":"text","value":".]);\n"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"addremove-child"},"children":[{"type":"text","value":"Add/Remove Child"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Configures routes for methods in "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"AddChild"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"RemoveChild(Child)"}]},{"type":"text","value":" signature\nto have a resource route "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"POST /../children"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"DELETE /../children/{childId}"}]},{"type":"text","value":"\nrespectively."}]},{"type":"element","tag":"pre","props":{"className":"language-csharp shiki shiki-themes slack-dark","code":"c => c.AddRemoveChild()\n","language":"csharp","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#9CDCFE"},"children":[{"type":"text","value":"c"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#D4D4D4"},"children":[{"type":"text","value":" =>"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#9CDCFE"},"children":[{"type":"text","value":" c"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E6E6E6"},"children":[{"type":"text","value":"."}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#DCDCAA"},"children":[{"type":"text","value":"AddRemoveChild"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E6E6E6"},"children":[{"type":"text","value":"()\n"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"command-pattern"},"children":[{"type":"text","value":"Command Pattern"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Configures public methods of transient services as api methods. This coding\nstyle allows you to have a public initializer ("},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"With"}]},{"type":"text","value":") with parameters which\nwill render as query parameters. It also removes "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Execute"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Process"}]},{"type":"text","value":" names\nfrom route."}]},{"type":"element","tag":"pre","props":{"className":"language-csharp shiki shiki-themes slack-dark","code":"c => c.CommandPattern()\n","language":"csharp","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#9CDCFE"},"children":[{"type":"text","value":"c"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#D4D4D4"},"children":[{"type":"text","value":" =>"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#9CDCFE"},"children":[{"type":"text","value":" c"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E6E6E6"},"children":[{"type":"text","value":"."}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#DCDCAA"},"children":[{"type":"text","value":"CommandPattern"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E6E6E6"},"children":[{"type":"text","value":"()\n"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"entity-extension-via-composition"},"children":[{"type":"text","value":"Entity Extension via Composition"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Allows classes to extend entities via composition. This marks a transient class\nas an entity extension when it implements implicit casting to an entity. Methods\nof these extension classes are rendered under entity group."}]},{"type":"element","tag":"pre","props":{"className":"language-csharp shiki shiki-themes slack-dark","code":"c => c.EntityExtensionViaComposition()\n","language":"csharp","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#9CDCFE"},"children":[{"type":"text","value":"c"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#D4D4D4"},"children":[{"type":"text","value":" =>"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#9CDCFE"},"children":[{"type":"text","value":" c"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E6E6E6"},"children":[{"type":"text","value":"."}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#DCDCAA"},"children":[{"type":"text","value":"EntityExtensionViaComposition"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E6E6E6"},"children":[{"type":"text","value":"()\n"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"entity-subclass-via-composition"},"children":[{"type":"text","value":"Entity Subclass via Composition"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Allows classes to be subclasses of entities via composition. This marks a\ntransient class as an entity subclass when it implements explicit casting to an\nentity. Methods of these extension classes are rendered under entity group. It\nuses the first unique property to discriminate entity records."}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"!WARNING"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"First unique property is expected to be "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"enum"}]},{"type":"text","value":" or "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"string"}]},{"type":"text","value":". Otherwise subclass\nrouting won't work."}]}]},{"type":"element","tag":"pre","props":{"className":"language-csharp shiki shiki-themes slack-dark","code":"c => c.EntitySubclassViaComposition()\n","language":"csharp","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#9CDCFE"},"children":[{"type":"text","value":"c"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#D4D4D4"},"children":[{"type":"text","value":" =>"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#9CDCFE"},"children":[{"type":"text","value":" c"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E6E6E6"},"children":[{"type":"text","value":"."}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#DCDCAA"},"children":[{"type":"text","value":"EntitySubclassViaComposition"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E6E6E6"},"children":[{"type":"text","value":"()\n"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"object-as-json"},"children":[{"type":"text","value":"Object as JSON"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Configures all "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"object"}]},{"type":"text","value":" parameters, return types and properties to be treated as\n"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"JSON"}]},{"type":"text","value":" content."}]},{"type":"element","tag":"pre","props":{"className":"language-csharp shiki shiki-themes slack-dark","code":"c => c.ObjectAsJson()\n","language":"csharp","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#9CDCFE"},"children":[{"type":"text","value":"c"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#D4D4D4"},"children":[{"type":"text","value":" =>"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#9CDCFE"},"children":[{"type":"text","value":" c"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E6E6E6"},"children":[{"type":"text","value":"."}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#DCDCAA"},"children":[{"type":"text","value":"ObjectAsJson"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E6E6E6"},"children":[{"type":"text","value":"()\n"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"records-are-dtos"},"children":[{"type":"text","value":"Records are DTOs"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Configures domain type records as valid input paramters. Methods containing\nrecord parameters render as api endpoints."}]},{"type":"element","tag":"pre","props":{"className":"language-csharp shiki shiki-themes slack-dark","code":"c => c.RecordsAreDtos()\n","language":"csharp","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#9CDCFE"},"children":[{"type":"text","value":"c"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#D4D4D4"},"children":[{"type":"text","value":" =>"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#9CDCFE"},"children":[{"type":"text","value":" c"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E6E6E6"},"children":[{"type":"text","value":"."}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#DCDCAA"},"children":[{"type":"text","value":"RecordsAreDtos"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E6E6E6"},"children":[{"type":"text","value":"()\n"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"remaining-services-are-singleton"},"children":[{"type":"text","value":"Remaining Services are Singleton"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Adds "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"SingletonAttribute"}]},{"type":"text","value":" to the services that has no "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"TransientAttribute"}]},{"type":"text","value":" or\n"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"ScopedAttribute"}]},{"type":"text","value":"."}]},{"type":"element","tag":"pre","props":{"className":"language-csharp shiki shiki-themes slack-dark","code":"c => c.RemainingServicesAreSingleton()\n","language":"csharp","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#9CDCFE"},"children":[{"type":"text","value":"c"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#D4D4D4"},"children":[{"type":"text","value":" =>"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#9CDCFE"},"children":[{"type":"text","value":" c"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E6E6E6"},"children":[{"type":"text","value":"."}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#DCDCAA"},"children":[{"type":"text","value":"RemainingServicesAreSingleton"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E6E6E6"},"children":[{"type":"text","value":"()\n"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"rich-entity"},"children":[{"type":"text","value":"Rich Entity"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Adds "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"QueryAttribute"}]},{"type":"text","value":" to classes that inject "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"IQueryContext<TEntity>"}]},{"type":"text","value":". Using\ngeneric argument of "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"IQueryContext<TEntity>"}]},{"type":"text","value":" finds corresponding entity class\nand add "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"EntityAttribute"}]},{"type":"text","value":" to it."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Configures "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"NHibernate"}]},{"type":"text","value":" to initialize entities using dependency injection, making\nthem rich entities."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Configures routes and swagger docs to use entity methods as resource actions."}]},{"type":"element","tag":"pre","props":{"className":"language-csharp shiki shiki-themes slack-dark","code":"c => c.RichEntity()\n","language":"csharp","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#9CDCFE"},"children":[{"type":"text","value":"c"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#D4D4D4"},"children":[{"type":"text","value":" =>"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#9CDCFE"},"children":[{"type":"text","value":" c"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E6E6E6"},"children":[{"type":"text","value":"."}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#DCDCAA"},"children":[{"type":"text","value":"RichEntity"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E6E6E6"},"children":[{"type":"text","value":"()\n"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"scoped-by-suffix"},"children":[{"type":"text","value":"Scoped by Suffix"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Adds "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"ScopedAttribute"}]},{"type":"text","value":" to the services that has name with any of the given\nsuffixes."}]},{"type":"element","tag":"pre","props":{"className":"language-csharp shiki shiki-themes slack-dark","code":"c => c.ScopedBySuffix(suffixes: [\"Context\", \"Scope\"])\n","language":"csharp","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#9CDCFE"},"children":[{"type":"text","value":"c"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#D4D4D4"},"children":[{"type":"text","value":" =>"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#9CDCFE"},"children":[{"type":"text","value":" c"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E6E6E6"},"children":[{"type":"text","value":"."}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#DCDCAA"},"children":[{"type":"text","value":"ScopedBySuffix"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E6E6E6"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#9CDCFE"},"children":[{"type":"text","value":"suffixes"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E6E6E6"},"children":[{"type":"text","value":": ["}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#CE9178"},"children":[{"type":"text","value":"\"Context\""}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E6E6E6"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#CE9178"},"children":[{"type":"text","value":"\"Scope\""}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E6E6E6"},"children":[{"type":"text","value":"])\n"}]}]}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"!NOTE"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Default suffix is "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Context"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"h2","props":{"id":"single-by-unique"},"children":[{"type":"text","value":"Single by Unique"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Scans query classes to have methods that conforms to "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"SingleBy[Property]"}]},{"type":"text","value":" naming\nconvetion. Treats such methods as single by unique methods and adds that\nproperty to entity id route parameter so that entites can be found through\nunique properties as well as their ids. For instance, if entity has\n"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"SingleByName"}]},{"type":"text","value":" then its id route parameter is updated from "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"{id}"}]},{"type":"text","value":" to\n"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"{idOrName}"}]},{"type":"text","value":"."}]},{"type":"element","tag":"pre","props":{"className":"language-csharp shiki shiki-themes slack-dark","code":"c => c.SingleByUnique()\n","language":"csharp","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#9CDCFE"},"children":[{"type":"text","value":"c"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#D4D4D4"},"children":[{"type":"text","value":" =>"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#9CDCFE"},"children":[{"type":"text","value":" c"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E6E6E6"},"children":[{"type":"text","value":"."}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#DCDCAA"},"children":[{"type":"text","value":"SingleByUnique"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E6E6E6"},"children":[{"type":"text","value":"()\n"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"uri-return-is-redirect"},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Uri"}]},{"type":"text","value":" Return is Redirect"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Adds redirect support to your api endpoints. It configures an endpoint to use\nredirect result when its corresponding method returns "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Uri"}]},{"type":"text","value":". Combined with\n"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"CommandPattern"}]},{"type":"text","value":", it allows you to create callback "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"GET"}]},{"type":"text","value":" endpoints when method\ndoesn't have any parameters. For actions that have parameters, it configures its\ncorresponding endpoint to accept form instead of a "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"json"}]},{"type":"text","value":" body."}]},{"type":"element","tag":"pre","props":{"className":"language-csharp shiki shiki-themes slack-dark","code":"c => c.UriReturnIsRedirect()\n","language":"csharp","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#9CDCFE"},"children":[{"type":"text","value":"c"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#D4D4D4"},"children":[{"type":"text","value":" =>"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#9CDCFE"},"children":[{"type":"text","value":" c"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E6E6E6"},"children":[{"type":"text","value":"."}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#DCDCAA"},"children":[{"type":"text","value":"UriReturnIsRedirect"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E6E6E6"},"children":[{"type":"text","value":"()\n"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"use-built-in-types"},"children":[{"type":"text","value":"Use Built-in Types"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Configures built-in .NET types to be used as entity properties and service\nparameters. Uses "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"IParsable"}]},{"type":"text","value":" interface to configure primitives. Additionally\nconfigures "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"string"}]},{"type":"text","value":", enums, "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Uri"}]},{"type":"text","value":" and "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"IEnumerable<>"}]},{"type":"text","value":" types."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It also allows for string properties to use "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"TEXT"}]},{"type":"text","value":" column type instead of\n"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"VARCHAR"}]},{"type":"text","value":" by suffixes."}]},{"type":"element","tag":"pre","props":{"className":"language-csharp shiki shiki-themes slack-dark","code":"c => c.UseBuiltInTypes(textPropertySuffixes: [\"Data\", \"Description\"])\n","language":"csharp","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#9CDCFE"},"children":[{"type":"text","value":"c"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#D4D4D4"},"children":[{"type":"text","value":" =>"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#9CDCFE"},"children":[{"type":"text","value":" c"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E6E6E6"},"children":[{"type":"text","value":"."}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#DCDCAA"},"children":[{"type":"text","value":"UseBuiltInTypes"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E6E6E6"},"children":[{"type":"text","value":"("}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#9CDCFE"},"children":[{"type":"text","value":"textPropertySuffixes"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E6E6E6"},"children":[{"type":"text","value":": ["}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#CE9178"},"children":[{"type":"text","value":"\"Data\""}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E6E6E6"},"children":[{"type":"text","value":", "}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#CE9178"},"children":[{"type":"text","value":"\"Description\""}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E6E6E6"},"children":[{"type":"text","value":"])\n"}]}]}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"!TIP"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Default text property suffix is "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"Data"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"h2","props":{"id":"use-nullable-types"},"children":[{"type":"text","value":"Use Nullable Types"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Adds support for nullable value and reference types. Configures api model to\nforbid sending null or empty values to not-null parameters."}]},{"type":"element","tag":"pre","props":{"className":"language-csharp shiki shiki-themes slack-dark","code":"c => c.UseNullableTypes()\n","language":"csharp","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#9CDCFE"},"children":[{"type":"text","value":"c"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#D4D4D4"},"children":[{"type":"text","value":" =>"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#9CDCFE"},"children":[{"type":"text","value":" c"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E6E6E6"},"children":[{"type":"text","value":"."}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#DCDCAA"},"children":[{"type":"text","value":"UseNullableTypes"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E6E6E6"},"children":[{"type":"text","value":"()\n"}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"with-method"},"children":[{"type":"text","value":"With Method"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Adds "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"TransientAttribute"}]},{"type":"text","value":" to the services that has a "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"With"}]},{"type":"text","value":" method. This coding\nstyle makes usages like "},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"newEntity().With(name)"}]},{"type":"text","value":" possible."}]},{"type":"element","tag":"pre","props":{"className":"language-csharp shiki shiki-themes slack-dark","code":"c => c.WithMethod()\n","language":"csharp","meta":"","style":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"style":"--shiki-default:#9CDCFE"},"children":[{"type":"text","value":"c"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#D4D4D4"},"children":[{"type":"text","value":" =>"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#9CDCFE"},"children":[{"type":"text","value":" c"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E6E6E6"},"children":[{"type":"text","value":"."}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#DCDCAA"},"children":[{"type":"text","value":"WithMethod"}]},{"type":"element","tag":"span","props":{"style":"--shiki-default:#E6E6E6"},"children":[{"type":"text","value":"()\n"}]}]}]}]},{"type":"element","tag":"style","props":{},"children":[{"type":"text","value":"html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"addremove-child","depth":2,"text":"Add/Remove Child"},{"id":"command-pattern","depth":2,"text":"Command Pattern"},{"id":"entity-extension-via-composition","depth":2,"text":"Entity Extension via Composition"},{"id":"entity-subclass-via-composition","depth":2,"text":"Entity Subclass via Composition"},{"id":"object-as-json","depth":2,"text":"Object as JSON"},{"id":"records-are-dtos","depth":2,"text":"Records are DTOs"},{"id":"remaining-services-are-singleton","depth":2,"text":"Remaining Services are Singleton"},{"id":"rich-entity","depth":2,"text":"Rich Entity"},{"id":"scoped-by-suffix","depth":2,"text":"Scoped by Suffix"},{"id":"single-by-unique","depth":2,"text":"Single by Unique"},{"id":"uri-return-is-redirect","depth":2,"text":"Uri Return is Redirect"},{"id":"use-built-in-types","depth":2,"text":"Use Built-in Types"},{"id":"use-nullable-types","depth":2,"text":"Use Nullable Types"},{"id":"with-method","depth":2,"text":"With Method"}]}},"_type":"markdown","_id":"content:features:coding-style.md","_source":"content","_file":"features/coding-style.md","_stem":"features/coding-style","_extension":"md"}