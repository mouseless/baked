const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./Cw7M5IiB.js","./DSas5Ykw.js","./entry.B0G4llYu.css"])))=>i.map(i=>d[i]);
import{B as w}from"./DSas5Ykw.js";import{c as g,t as u,b as l,f as p}from"./BsotVQGb.js";async function S(n,o="gzip"){var c;const e=Uint8Array.from(atob(n),d=>d.charCodeAt(0)),r=(c=new Response(new Blob([e])).body)==null?void 0:c.pipeThrough(new DecompressionStream(o)),s=await new Response(r).text();return JSON.parse(s)}function f(n,o){const e=b(n),t={...o};for(const r in t)e[r]==="json"&&t[r]&&t[r]!=="undefined"&&(t[r]=JSON.parse(t[r])),e[r]==="boolean"&&t[r]!=="undefined"&&(t[r]=!!t[r]);for(const r in t)t[r]==="NULL"&&(t[r]=void 0);return t}function b(n){const o=n.match(/FROM\s+(\w+)/);if(!o)return{};const e=g[h(o[1])];return(e==null?void 0:e.fields)||{}}function h(n){return n.replace(/^_content_/,"")}let a;const m={},i={};function x(n){async function o(e){return a||(i._=i._||_(),a=await i._,Reflect.deleteProperty(i,"_")),m[String(e)]||(i[String(e)]=i[String(e)]||y(e),await i[String(e)],m[String(e)]="loaded",Reflect.deleteProperty(i,String(e))),a}return{all:async(e,t)=>(await o(n),a.exec({sql:e,bind:t,rowMode:"object",returnValue:"resultRows"}).map(r=>f(e,r))),first:async(e,t)=>(await o(n),f(e,a.exec({sql:e,bind:t,rowMode:"object",returnValue:"resultRows"}).shift())),exec:async(e,t)=>{await o(n),await a.exec({sql:e,bind:t})}}}async function _(){if(!a){const n=await w(()=>import("./Cw7M5IiB.js"),__vite__mapDeps([0,1,2]),import.meta.url).then(e=>e.default);globalThis.sqlite3ApiConfig={silent:!0,debug:(...e)=>console.debug(...e),warn:(...e)=>{String(e[0]).includes("OPFS sqlite3_vfs")||console.warn(...e)},error:(...e)=>console.error(...e),log:(...e)=>console.log(...e)};const o=await n();a=new o.oo1.DB}return a}async function y(n){if(window.sessionStorage.getItem("previewToken"))return a;let o=null;const e=`checksum_${n}`,t=`collection_${n}`;let r="matched";try{const s=a.exec({sql:`SELECT * FROM ${u.info} where id = '${e}'`,rowMode:"object",returnValue:"resultRows"}).shift();(s==null?void 0:s.version)!==l[String(n)]&&(r="mismatch")}catch{r="missing"}if(r!=="matched"){if(window.localStorage.getItem(`content_${e}`)===l[String(n)]&&(o=window.localStorage.getItem(`content_${t}`)),!o){o=await p(void 0,String(n));try{window.localStorage.setItem(`content_${e}`,l[String(n)]),window.localStorage.setItem(`content_${t}`,o)}catch(c){console.error("Database integrity check failed, rebuilding database",c)}}const s=await S(o);await a.exec({sql:`DROP TABLE IF EXISTS ${u[String(n)]}`}),r==="mismatch"&&await a.exec({sql:`DELETE FROM ${u.info} WHERE id = '${e}'`});for(const c of s)try{await a.exec(c)}catch(d){console.error("Error executing command",d)}}return a}export{x as loadDatabaseAdapter};
